@Fatal {2025-06-23 14:43:09.2071488 GMT+2} Assertion Failed! false
  Msg: Error in shader compilation of type: FRAGMENT
0(1) : error C0000: syntax error, unexpected integer constant, expecting "::" at token "<int-const>"
0(8) : warning C1503: undefined variable "color"


  >> at hydro::gfx::OpenGLShader::CheckCompileErrors
     C:\Users\vikto\Desktop\Hydro\Engine\src\Core\gfx\API\OpenGl\OpenGLShader.cpp(66)
Stack trace (most recent call last):
#9    Object "", at 00007FFE6FD3259D, in BaseThreadInitThunk
#8    Source "D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp", line 17, in mainCRTStartup
#7    Source "D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl", line 331, in __scrt_common_main
#6    Source "D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl", line 288, in __scrt_common_main_seh
#5    Source "D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl", line 79, in invoke_main
#4    Source "C:\Users\vikto\Desktop\Hydro\Editor\src\App.cpp", line 26, in main
         23: {
         24: 	Boot();
         25: 
      >  26: 	ioc::Get().Resolve<runtime::IRuntime>()->Run();
         27: 
         28: 	return 0;
         29: }
#3    Source "C:\Users\vikto\Desktop\Hydro\Editor\src\EditorRuntime.cpp", line 125, in hydro::runtime::EditorRuntime::Run
        122:         );
        123: 
        124:         //Shaders
      > 125:         shader->Create(std::filesystem::path{"Shaders/vertexShader.glsl"}, "Shaders/fragmentShader.glsl");
        126: 
        127:         //Init ImGui with openGL
        128:         ioc::Get().Resolve<ImGuiManager>()->Init(pWindow,&glContext);
#2    Source "C:\Users\vikto\Desktop\Hydro\Engine\src\Core\gfx\API\OpenGl\OpenGLShader.cpp", line 16, in hydro::gfx::OpenGLShader::Create
         14: 	void OpenGLShader::Create(std::filesystem::path vertSrc, std::filesystem::path fragSrc)
         15: 	{
      >  16: 		Create(LoadShader(vertSrc), LoadShader(fragSrc));
         17: 	}
         18: 
         19: 	void OpenGLShader::Create(std::string vertSrc, std::string fragSrc)
#1    Source "C:\Users\vikto\Desktop\Hydro\Engine\src\Core\gfx\API\OpenGl\OpenGLShader.cpp", line 31, in hydro::gfx::OpenGLShader::Create
         28: 		shaderSrc = fragSrc.c_str();
         29: 		glShaderSource(fragmentShader, 1, &shaderSrc, nullptr);
         30: 		glCompileShader(fragmentShader);
      >  31: 		CheckCompileErrors(fragmentShader, "FRAGMENT");
         32: 
         33: 		CreateProgram(vertexShader, fragmentShader);
         34: 	}
#0    Source "C:\Users\vikto\Desktop\Hydro\Engine\src\Core\gfx\API\OpenGl\OpenGLShader.cpp", line 66, in hydro::gfx::OpenGLShader::CheckCompileErrors
         63: 			glGetShaderiv(shader, GL_COMPILE_STATUS, &success);
         64: 			if (!success) {
         65: 				glGetShaderInfoLog(shader, 1024, nullptr, infoLog);
      >  66: 				hass(false).msg(L"Error in shader compilation of type: " + utl::ToWide(type) + L"\n" + utl::ToWide({ infoLog }));
         67: 			}
         68: 		}
         69: 		else {

